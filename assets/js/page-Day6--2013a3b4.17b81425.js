(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{491:function(e,s,t){"use strict";t.r(s);var a=t(2),i=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"day-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-6"}},[e._v("#")]),e._v(" Day 6")]),e._v(" "),t("h2",{attrs:{id:"what-is-scope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope"}},[e._v("#")]),e._v(" What is scope?")]),e._v(" "),t("p",[e._v("Scope is the range at which a variable is accessible. A variable can't be accessed outside of it's scope.")]),e._v(" "),t("h2",{attrs:{id:"what-is-hoisting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-hoisting"}},[e._v("#")]),e._v(" What is hoisting?")]),e._v(" "),t("p",[e._v("Hoisting has to be the grossest thing I've ever seen in my life. It apparently lets instantiate your variables after using them.")]),e._v(" "),t("h2",{attrs:{id:"in-what-cases-might-you-use-let-vs-const-vs-var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-what-cases-might-you-use-let-vs-const-vs-var"}},[e._v("#")]),e._v(" In what cases might you use let vs const vs var?")]),e._v(" "),t("p",[e._v("Const would be used when you need the same, never changing value repeatedly. Var would be used for globally scoped variables, and let should probably be used for everything else.")])])}),[],!1,null,null,null);s.default=i.exports}}]);